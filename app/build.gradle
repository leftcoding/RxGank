apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkversion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 4
        versionName "2.1.1"
        multiDexEnabled true
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testOptions.unitTests.includeAndroidResources = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关闭
    lintOptions {
        abortOnError false
        disable "InvalidPackage"
        lintConfig file("lint.xml")
    }

    // java版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {

    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':support-coding-basic')
    debugImplementation rootProject.ext.leakcanary.leakcanary_android

    implementation rootProject.ext.butterknife.butterknife
    annotationProcessor rootProject.ext.compilerDeps.butterknife_compiler

    annotationProcessor rootProject.ext.compilerDeps.glide_compiler
    implementation project(path: ':support-coding-file')
}
